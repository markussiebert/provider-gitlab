apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: projecthooks.projects.gitlab.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: projects.gitlab.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gitlab
    kind: ProjectHook
    listKind: ProjectHookList
    plural: projecthooks
    singular: projecthook
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A ProjectHook is a managed resource that represents a Gitlab ProjectHook
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A ProjectHookSpec defines the desired state of a Gitlab ProjectHook.
          properties:
            deletionPolicy:
              description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              description: A ProjectHookParameters defines the desired state of a Gitlab ProjectHook.
              properties:
                confidentialIssuesEvents:
                  description: ConfidentialIssuesEvents triggers hook on confidential issues events.
                  type: boolean
                confidentialNoteEvents:
                  description: ConfidentialNoteEvents triggers hook on confidential issues events.
                  type: boolean
                enableSslVerification:
                  description: EnableSSLVerification enables SSL verification when triggering the hook.
                  type: boolean
                issuesEvents:
                  description: IssuesEvents triggers hook on issues events.
                  type: boolean
                jobEvents:
                  description: JobEvents triggers hook on job events.
                  type: boolean
                mergeRequestsEvents:
                  description: MergeRequestsEvents triggers hook on merge requests events.
                  type: boolean
                noteEvents:
                  description: NoteEvents triggers hook on note events.
                  type: boolean
                pipelineEvents:
                  description: PipelineEvents triggers hook on pipeline events.
                  type: boolean
                projectId:
                  description: ProjectID is the ID of the project.
                  type: integer
                projectIdRef:
                  description: ProjectIDRef is a reference to a project to retrieve its projectId
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                projectIdSelector:
                  description: ProjectIDSelector selects reference to a project to retrieve its projectId.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels is selected.
                      type: object
                  type: object
                pushEvents:
                  description: PushEvents triggers hook on push events.
                  type: boolean
                pushEventsBranch_filter:
                  description: PushEventsBranchFilter triggers hook on push events for matching branches only.
                  type: string
                tagPushEvents:
                  description: TagPushEvents triggers hook on tag push events.
                  type: boolean
                token:
                  description: Token is the secret token to validate received payloads.
                  type: string
                url:
                  description: URL is the hook URL.
                  type: string
                wikiPageEvents:
                  description: WikiPageEvents triggers hook on wiki events.
                  type: boolean
              required:
              - url
              type: object
            providerConfigRef:
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            providerRef:
              description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
        status:
          description: A ProjectHookStatus represents the observed state of a Gitlab ProjectHook.
          properties:
            atProvider:
              description: "ProjectHookObservation represents a project hook. \n GitLab API docs: https://docs.gitlab.com/ce/api/projects.html#list-project-hooks"
              properties:
                createdAt:
                  description: CreatedAt specifies the time the project hook was created
                  format: date-time
                  type: string
                id:
                  description: ID of the project hook at gitlab
                  type: integer
              type: object
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False, or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
